; !  | means mandatory
; #  | means optional
; C  | left_command
; T  | left_control
; O  | left_option
; S  | left_shift
; F  | fn
; Q  | right_command
; W  | right_control
; E  | right_option
; R  | right_shift
; !! | mandatory command + control + optional + shift (hyper)
; ## | optional any

{
  :simlayer-threshold 150
  :templates {
   :launch "open -a %s"
   :hs "open -g hammerspoon://\"%s\""
  }
  :layers {
    :primary-mode {:key :caps_lock :alone {:key :escape}}
  }
  :simlayers {
    :append-mode {:key :a}
    :launch-mode {:key :comma}
    :copy-mode {:key :y}
    :change-mode {:key :c}
    :common-mode {:key :semicolon}
    :share-mode {:key :quote}
    :toggle-mode {:key :spacebar}
    :find-mode {:key :slash}
    :execute-mode {:key :period}
    :insert-mode {:key :i}
    :make-mode {:key :n}
    :open-mode {:key :o}
    :relocate-mode {:key :r}
    :redo-mode {:key :u}
    :window-mode {:key :w}
    :debug-mode {:key :x}
    :vim-mode {:key :z}
  }
  :main [
    {
      :des "Primary Mode"
      :rules [:primary-mode
        [:semicolon :!!semicolon] ; open Alfred
        [:a :!!a] ; get app bundle ID from Alfred
        [:h [:hs "hyper?method=navigate&target=back"]]
        [:i :!!i] ; Alfred clipboard
        [:j [:hs "hyper?method=navigate&target=down"]]
        [:k [:hs "hyper?method=navigate&target=up"]]
        [:l [:hs "hyper?method=navigate&target=forward"]]
        [:m [:hs "hyper?method=toggle&target=sidebar"]]
        [:n [:hs "hyper?method=make&target=primary"]]
        [:o [:hs "hyper?method=open&target=primary"]]
        [:p :!Cv]
        [:u :!Cz]
        [:y [:hs "copyAnything"]]
        [:return_or_enter :caps_lock]
        [:spacebar [:hs "hyper?method=toggle&target=primary"]]
        ; [:comma [:hs ""]]
        [:period [:hs "hyper?method=execute&target=primary"]]
        [:slash :!Cf] ; normal find
      ]
    }
    {
      :des "Launch mode"
      :rules [:launch-mode
        ; [:caps_lock :!!n] ; Show notification center
        [:caps_lock [:hs "appMode"]]
        [:a [:launch "Slack.app"]]
        [:b [:launch "Google\\ Chrome.app"]]
        [:c :!!c] ; Fantastical
        [:d [:launch "TablePlus.app"]]
        [:e [:launch "Sublime\\ Text.app"]]
        [:f [:launch "Finder.app"]]
        [:g [:launch "Omnifocus.app"]]
        [:q [:launch "Postman.app"]]
        [:r [:launch "Bear.app"]]
        [:s [:launch "Spotify.app"]]
        [:t :!Ospacebar] ; iTerm
        [:v [:launch "Sublime\\ Merge.app"]]
        [:w [:launch "Drafts.app"]]
        [:x [:launch "Discord.app"]]
        [:z [:launch "Trello.app"]]
      ]
    }
    {
      :des "Common mode"
      :rules [:common-mode
        [:a :!Ca] ; Select all
        [:d [:hs "hyper?method=common&target=duplicate"]]
        ; [:f]
        [:g :!!g] ; Omnifocus quick entry
        [:q :!Cq] ; Cmd+q
        [:r [:hs "hyper?method=common&target=refresh"]]
        [:s [:hs "hyper?method=common&target=save"]]
        [:t :!Ct] ; Cmd+t
        [:v :!Cd] ; highlight next selection in Sublime
        [:w :!Cw] ; Cmd+t
        [:x [:hs "hyper?method=common&target=delete"]]
        [:z :!!quote] ; scroll mode
      ]
    }
    {
     :des "Share mode"
     :rules [:share-mode
      [:d :!!d] ; Edit done
      [:e :!!e] ; Edit with
      [:f :!SOCf] ; Add selected text to BitBar
      [:w :!SCw] ; Close all windows
     ]
    }
    {
     :des "Toggle mode"
     :rules [:toggle-mode
      [:c :!STC4] ; Screenshot to clipboard
      [:d [:hs "toggle?key=d"]]
      [:s :!SC4] ; Screenshot to filesystem
      [:w :!Ch] ; Cmd+h
     ]
   }
   {
    :des "Window mode"
    :rules [:window-mode
     [:semicolon [:hs "moveWindow?key=full"]]
     [:i [:hs "moveWindow?key=center"]]
     [:h [:hs "moveWindow?key=left"]]
     [:j [:hs "moveWindow?key=bottom"]]
     [:k [:hs "moveWindow?key=top"]]
     [:l [:hs "moveWindow?key=right"]]
     [:u [:hs "moveWindow?key=topLeft"]]
     [:o [:hs "moveWindow?key=topRight"]]
     [:n [:hs "moveWindow?key=bottomLeft"]]
     [:period [:hs "moveWindow?key=bottomRight"]]
    ]
   }
   {
     :des "Find mode"
     :rules [:find-mode
       [:a :!CSf] ; find all
       [:g :!CSOg] ; global google search
       [:r :!TSt] ; open selection hints in new tab
       [:z :!CSOz] ; global amazon search
     ]
   }
   {
     :des "Execute mode"
     :rules [:execute-mode
       [:a [:hs "hyper?method=execute&target=a"]]
       [:c [:hs "hyper?method=execute&target=c"]]
       [:f [:hs "hyper?method=execute&target=f"]]
       [:g [:hs "hyper?method=execute&target=g"]]
       [:r [:hs "hyper?method=execute&target=r"]]
       [:s [:hs "hyper?method=execute&target=s"]]
       [:t [:hs "hyper?method=execute&target=t"]]
       [:v [:hs "hyper?method=execute&target=v"]]
       [:w [:hs "hyper?method=execute&target=w"]]
     ]
    }
    {
     :des "Copy mode"
     :rules [:copy-mode
       [:d [:hs "copyMode?key=d"]]
     ]
    }
    {
     :des "Relocate Mode"
     :rules [:relocate-mode
       [:j [:hs "hyper?method=relocate&target=down"]]
       [:k [:hs "hyper?method=relocate&target=up"]]
     ]
   }
   {
     :des "Debug mode and Vim movements"
     :rules [:debug-mode
       [:h :!Oleft_arrow] ; move one word back
       [:j [:hs "debugSomething?key=j"]]
       [:k [:hs "debugSomething?key=k"]]
       [:l :!Oright_arrow] ; move one character forward
     ]
   }
   {
     :des "Vim mode"
     :rules [:vim-mode
       [:h :left_arrow] ; go back one character
       [:j :down_arrow] ; go down one line
       [:k :up_arrow] ; go up one line
       [:l :right_arrow] ; go forward one character
       [:i :!Cleft_arrow] ; go to start of line
     ]
    }
   {
     :des "Append Mode"
     :rules [:append-mode
       [:comma [:hs "hyper?method=append&target=comma"]]
       [:semicolon [:hs "hyper?method=append&target=semicolon"]]
     ]
   }
   {
     :des "Insert Mode"
     :rules [:insert-mode
       [:a [:hs "hyper?method=insert&target=a"]]
       [:c [:hs "hyper?method=insert&target=c"]]
       [:d [:hs "hyper?method=insert&target=d"]]
       [:e [:hs "hyper?method=insert&target=e"]]
       [:f [:hs "hyper?method=insert&target=f"]]
       [:g [:hs "hyper?method=insert&target=g"]]
       [:s [:hs "hyper?method=insert&target=s"]]
       [:t [:hs "hyper?method=insert&target=t"]]
       [:w [:hs "hyper?method=insert&target=w"]]
       [:x [:hs "hyper?method=insert&target=x"]]
     ]
   }
   {
     :des "Make mode"
     :rules [:make-mode
       [:r [:hs "hyper?method=make&target=r"]]
     ]
   }
   {
     :des "Open Mode"
     :rules [:open-mode
       [:caps_lock [:hs "hyper?method=open&target=options"]]
       [:a [:hs "hyper?method=open&target=a"]]
       [:b [:hs "hyper?method=open&target=b"]]
       [:c [:hs "hyper?method=open&target=c"]]
       [:e [:hs "hyper?method=open&target=e"]]
       [:f [:hs "hyper?method=open&target=f"]]
       [:g [:hs "hyper?method=open&target=g"]]
       [:r [:hs "hyper?method=open&target=r"]]
       [:s [:hs "hyper?method=open&target=s"]]
       [:t [:hs "hyper?method=open&target=t"]]
       [:v [:hs "hyper?method=open&target=v"]]
       [:w [:hs "hyper?method=open&target=w"]]
       [:x [:hs "hyper?method=open&target=x"]]
     ]
   }
   {
     :des "Change Mode"
     :rules [:change-mode
       [:k [:hs "hyper?method=change&target=k"]]
       [:l [:hs "hyper?method=change&target=l"]]
       [:u [:hs "hyper?method=change&target=u"]]
     ]
   }
  ]
}
