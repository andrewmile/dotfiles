; !  | means mandatory
; #  | means optional
; C  | left_command
; T  | left_control
; O  | left_option
; S  | left_shift
; F  | fn
; Q  | right_command
; W  | right_control
; E  | right_option
; R  | right_shift
; !! | mandatory command + control + optional + shift (hyper)
; ## | optional any

{
  :simlayer-threshold 150
  :templates {
   :launch "open -a %s"
   :hs "open -g hammerspoon://\"%s\""
   :hyper "open -g hammerspoon://hyper?action=%s\\&target=%s\\&combo=%s"
  }
  :layers {
    :default {:key :caps_lock :alone {:key :escape}}
  }
  :simlayers {
    :append {:key :a}
    :launch {:key :comma}
    :copy {:key :y}
    :change {:key :c}
    :general {:key :semicolon}
    :switch {:key :quote}
    :toggle {:key :spacebar}
    :find {:key :slash}
    :symbol {:key :f}
    :execute {:key :period}
    :insert {:key :i}
    :make {:key :n}
    :open {:key :o}
    :relocate {:key :r}
    :redo {:key :u}
    :window {:key :w}
    :debug {:key :x}
    :vim {:key :z}
  }
  :main [
    {
      :des "Default layer"
      :rules [:default
        [:semicolon [:hyper "open" "alfred"]]
        [:a :!!a] ; get app bundle ID from Alfred
        [:h [:hyper "navigate" "back"]]
        [:i [:hyper "insert" "default"]]
        [:j [:hyper "navigate" "down"]]
        [:k [:hyper "navigate" "up"]]
        [:l [:hyper "navigate" "forward"]]
        [:m [:hyper "toggle" "sidebar"]]
        [:n [:hyper "make" "default"]]
        [:o [:hyper "open" "default"]]
        [:p :!Cv]
        [:u :!Cz]
        [:y [:hyper "copy" "default"]]
        [:return_or_enter :!CTOSquote] ; vimac scroll
        [:spacebar [:hyper "toggle" "default" "Cmd+Spacebar"]]
        [:comma [:hyper "launch" "bunch"]]
        [:period [:hyper "execute" "default"]]
        [:slash [:hyper "find" "default"]]
      ]
    }
    {
      :des "Launch layer"
      :rules [:launch
        [:caps_lock [:hyper "modal" "app"]]
        [:a [:launch "Slack.app"]]
        [:b [:launch "Arc.app"]]
        ; [:b [:launch "Google\\ Chrome.app"]]
        [:c :!!c] ; Fantastical
        [:d [:launch "TablePlus.app"]]
        [:e [:launch "Sublime\\ Text.app"]]
        ; [:e [:launch "Visual\\ Studio\\ Code"]]
        [:f [:launch "Finder.app"]]
        [:g [:launch "Obsidian.app"]]
        [:q [:launch "Zoom.us.app"]]
        [:r [:launch "Tinkerwell.app"]]
        [:s [:launch "Spotify.app"]]
        [:t [:launch "iTerm.app"]]
        [:v [:launch "Sublime\\ Merge.app"]]
        [:w [:launch "Drafts.app"]]
        [:x [:launch "Discord.app"]]
        [:z [:launch "Trello.app"]]
        ; [:z [:launch "Zoom.us.app"]]
      ]
    }
    {
      :des "General layer"
      :rules [:general
        [:a :!Ca] ; Select all
        [:d [:hyper "general" "duplicate"]]
        ; [:f]
        [:g :!!g] ; Omnifocus quick entry
        [:q :!Cq] ; Cmd+q
        [:r [:hyper "general" "refresh"]]
        [:s [:hyper "general" "save"]]
        [:t :!Ct] ; Cmd+t
        [:v [:hyper "general" "v"]] ; highlight next selection
        [:w :!Cw] ; Cmd+t
        [:x [:hyper "general" "delete"]]
        [:z :!!quote] ; scroll
      ]
    }
    {
     :des "Switch layer"
     :rules [:switch
      [:c [:hyper "switch" "c"]]
      [:d :!!d] ; Edit done
      [:e :!!e] ; Edit with
      [:f :!SOCf] ; Add selected text to BitBar
      [:r [:hyper "switch" "r"]]
      [:w :!SCw] ; Close all windows
     ]
    }
    {
     :des "Toggle layer"
     :rules [:toggle
      [:a [:hyper "toggle" "a"]]
      [:c :!STC4] ; Screenshot to clipboard
      [:d [:hyper "toggle" "display"]]
      [:f [:hyper "toggle" "f"]]
      [:m [:hyper "toggle" "m"]]
      [:q [:hyper "toggle" "q"]]
      [:r [:hyper "toggle" "r"]]
      [:s :!SC4] ; Screenshot to filesystem
      [:t [:hyper "toggle" "t"]]
      [:w :!Ch] ; Cmd+h
      [:semicolon :!CTOSn] ; notification center
     ]
   }
   {
    :des "Window layer"
    :rules [:window
     [:semicolon [:hs "moveWindow?key=full"]]
     ; [:i [:hs "moveWindow?key=center"]]
     ; [:h [:hs "moveWindow?key=left"]]
     ; [:j [:hs "moveWindow?key=bottom"]]
     ; [:k [:hs "moveWindow?key=top"]]
     ; [:l [:hs "moveWindow?key=right"]]
     ; [:u [:hs "moveWindow?key=topLeft"]]
     ; [:o [:hs "moveWindow?key=topRight"]]
     ; [:n [:hs "moveWindow?key=bottomLeft"]]
     ; [:period [:hs "moveWindow?key=bottomRight"]]
    ]
   }
   {
     :des "Find layer"
     :rules [:find
       [:a :!CSf] ; find all
       [:g [:hyper "find" "g"]]
       [:r :!TSt] ; open selection hints in new tab
       [:s [:hyper "find" "s"]]
       [:v [:hyper "find" "v"]]
       [:w [:hyper "find" "w"]]
       [:z [:hyper "find" "z"]]
     ]
   }
   {
     :des "Symbol layer"
     :rules [:symbol
       [:j [:hyper "symbol" "next"]]
       [:k [:hyper "symbol" "previous"]]
     ]
   }
   {
     :des "Execute layer"
     :rules [:execute
       [:caps_lock [:hyper "execute" "options"]]
       [:a [:hyper "execute" "a"]]
       [:c [:hyper "execute" "c"]]
       [:f [:hyper "execute" "f"]]
       [:g [:hyper "execute" "g"]]
       [:r [:hyper "execute" "r"]]
       [:s [:hyper "execute" "s"]]
       [:t [:hyper "execute" "t"]]
       [:v [:hyper "execute" "v"]]
       [:w [:hyper "execute" "w"]]
     ]
    }
    {
     :des "Copy layer"
     :rules [:copy
       [:a [:hyper "copy" "a"]]
       [:b [:hyper "copy" "b"]]
       [:c [:hyper "copy" "c"]]
       [:d [:hyper "copy" "d"]]
       [:w [:hyper "copy" "w"]]
     ]
    }
    {
     :des "Relocate layer"
     :rules [:relocate
       [:j [:hyper "relocate" "down"]]
       [:k [:hyper "relocate" "up"]]
       [:semicolon [:hyper "relocate" "semicolon"]]
     ]
   }
   {
     :des "Debug layer and Vim movements"
     :rules [:debug
       [:h :!Oleft_arrow] ; move one word back
       [:j [:hyper "debug" "j"]]
       [:k [:hyper "debug" "k"]]
       [:l :!Oright_arrow] ; move one character forward
     ]
   }
   {
     :des "Vim layer"
     :rules [:vim
       [:h :left_arrow] ; go back one character
       [:j :down_arrow] ; go down one line
       [:k :up_arrow] ; go up one line
       [:l :right_arrow] ; go forward one character
       [:i :!Cleft_arrow] ; go to start of line
     ]
    }
   {
     :des "Append layer"
     :rules [:append
       [:comma [:hyper "append" "comma"]]
       [:semicolon [:hyper "append" "semicolon"]]
     ]
   }
   {
     :des "Insert layer"
     :rules [:insert
       [:a [:hyper "insert" "a"]]
       [:c [:hyper "insert" "c"]]
       [:d [:hyper "insert" "d"]]
       [:e [:hyper "insert" "e"]]
       [:f [:hyper "insert" "f"]]
       [:g [:hyper "insert" "g"]]
       [:s [:hyper "insert" "s"]]
       [:t [:hyper "insert" "t"]]
       [:w [:hyper "insert" "w"]]
       [:x [:hyper "insert" "x"]]
     ]
   }
   {
     :des "Make layer"
     :rules [:make
       [:b [:hyper "make" "b"]]
       [:c [:hyper "make" "c"]]
       [:d [:hyper "make" "d"]]
       [:e [:hyper "make" "e"]]
       [:r [:hyper "make" "r"]]
       [:t [:hyper "make" "t"]]
       [:w [:hyper "make" "w"]]
       [:z [:hyper "make" "z"]]
     ]
   }
   {
     :des "Open layer"
     :rules [:open
       [:caps_lock [:hyper "open" "options"]]
       [:a [:hyper "open" "a"]]
       [:b [:hyper "open" "b"]]
       [:c [:hyper "open" "c"]]
       [:d [:hyper "open" "d"]]
       [:e [:hyper "open" "e"]]
       [:f [:hyper "open" "f"]]
       [:g [:hyper "open" "g"]]
       [:r [:hyper "open" "r" ["key" "r"]]]
       [:s [:hyper "open" "s"]]
       [:t [:hyper "open" "t"]]
       [:v [:hyper "open" "v"]]
       [:w [:hyper "open" "w"]]
       [:x [:hyper "open" "x"]]
     ]
   }
   {
     :des "Change layer"
     :rules [:change
       [:k [:hyper "change" "k"]]
       [:l [:hyper "change" "l"]]
       [:u [:hyper "change" "u"]]
     ]
   }
  ]
}
